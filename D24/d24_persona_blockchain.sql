create blockchain table d24_persona (
    id      number generated by default on null as identity
            constraint d24_persona_id_pk primary key,
    nome    varchar2(30 char) not null,
    data    date not null
)
no drop until 0 days idle
        no delete until 31 days after insert
        hashing using "sha2_512" version v1;

insert into d24_persona (nome,data) values ('Roberto',sysdate);
insert into d24_persona (nome,data) values ('Maria',sysdate);


select internal_column_id,
       column_name,
       data_type,
       data_length,
       hidden_column
from   user_tab_cols       
where  table_name = 'D24_PERSONA'
order by internal_column_id;

select p.*, orabctab_hash$ from d24_persona p

alter table d24_persona no drop until 2 days idle;
alter table d24_persona no drop until 1 days idle;


alter table d24_persona no delete until 32 days after insert;
alter table d24_persona no delete until 30 days after insert;


declare
  l_rows  number;
begin
  dbms_blockchain_table.delete_expired_rows(
    schema_name            => 'X250',
    table_name             => 'D24_PERSONA',
    before_timestamp       => null,
    number_of_rows_deleted => l_rows);

  dbms_output.put_line('Riche Cancellate=' || l_rows);
end;
/



declare
  l_rows  number;
begin
  dbms_blockchain_table.delete_expired_rows(
    schema_name            => 'X250',
    table_name             => 'D24_PERSONA',
    before_timestamp       => systimestamp - 60,
    number_of_rows_deleted => l_rows);

  dbms_output.put_line('Riche Cancellate=' || l_rows);
end;
/


declare
  l_rows      number;
  l_verified  number;
begin
  select count(*)
  into   l_rows
  from   d24_persona;

  dbms_blockchain_table.verify_rows(
    schema_name             => 'X250',
    table_name              => 'D24_PERSONA',
    number_of_rows_verified => l_verified);

  dbms_output.put_line('Righe=' || l_rows || '  Righe Verificate=' || l_verified);
end;
/